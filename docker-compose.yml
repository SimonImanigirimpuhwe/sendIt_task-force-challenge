# Use postgres/example user/password credentials
version: '3.1'

services:
  todo-api:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - /app/node_modules
      - .:/app
    links:
      - postgres

    ports:
      - "5000:5000"
    depends_on:
      - postgres
      #   condition: service_healthy
      # products-run-migrations:
      #   condition: service_started
    env_file: .env

  postgres:
    image: postgres:alpine
    restart: always
    # command: postgres -c 'max_connections=1024'
    ports: 
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - DB_HOSTNAME=${DB_HOSTNAME}
      
    volumes:
      - ./tmp/db:/var/lib/postgresql/data
    # # environment:
    #   POSTGRES_PASSWORD: password
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U root"]
  #     interval: 60s

  # products-run-migrations:
  #   build:
  #     context: .
  #   image: yourorg/products-run-migrations:${IMAGE_TAG:-latest}
  #   entrypoint:
  #     - /bin/bash
  #     - -c
  #     - "wait-for-it $$DB_HOSTNAME:5432 -s -t 60 -- yarn run db-migrate:todo-api"
  #   restart: on-failure:5
  #   env_file:
  #     - .env
  #   depends_on:
  #     postgres:
  #       condition: service_healthy

  # migration:
  #   image: todo-api
  #   command: ["./wait-for-it/wait-for-it.sh", "postgres:5432", "--", "yarn", "run", "migrate"]
  #   links:
  #     - postgres
  #   depends_on:
  #     - postgres
volumes:
  postgres:
